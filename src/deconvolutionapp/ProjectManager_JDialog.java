/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProjectManager_JDialog.java
 *
 * Created on Sep 21, 2011, 12:56:43 PM
 */
package deconvolutionapp;

//User Imports
import java.io.*;
import javax.swing.*;
import org.apache.commons.io.FileUtils;


/**
 *
 * @author Gregory
 */
public class ProjectManager_JDialog extends javax.swing.JDialog {

    //class types
    ConfigReader ConfigFile;
    File selectedFile;
    File conversionFile;
    
    String DefaultDirectory;
    MS_DataStructure dataStructure;
    Boolean ProjectManagerFinished;
    Boolean dataStructureReady;
    
    
    /** Creates new form ProjectManager_JDialog */
    public ProjectManager_JDialog(java.awt.Frame parent,ConfigReader ConfigFile, boolean modal) {
        super(parent, modal);
        initComponents();
        this.ConfigFile = ConfigFile;
        initValues();     
    }
    
    private void initValues(){
        ProjectManagerFinished = false;
        dataStructureReady = false;
        
        ProjectDirectoryButton.setEnabled(false);
        RECTOFButton.setEnabled(false);
        CreateButton.setEnabled(false);
        FinishedButton.setEnabled(false);
        ProgressBar.setEnabled(false);
        ProgressBar.setValue(0);
        
        //Populate Default Fields
        try{
           ProjectDirectory.setText(ConfigFile.getConfigParameter("/root/DefaultDirectory"));
           selectedFile = new File(ConfigFile.getConfigParameter("/root/DefaultDirectory"));
        }
        catch(Exception ex){
           ex.printStackTrace();
        }

    }
    
    public Object getMS_DataStructure() throws Exception{
        if (this.dataStructureReady == true){
            return this.dataStructure;
        }
        else{
            throw new Exception("DataStrucuture does not exist.");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProjectNamePanel = new javax.swing.JPanel();
        ProjectName = new javax.swing.JTextField();
        ProjectDirectoryPanel = new javax.swing.JPanel();
        ProjectDirectory = new javax.swing.JTextField();
        ProjectDirectoryButton = new javax.swing.JButton();
        RECTOFPanel = new javax.swing.JPanel();
        OrginalFile = new javax.swing.JTextField();
        RECTOFButton = new javax.swing.JButton();
        ProjectNamePanel1 = new javax.swing.JPanel();
        ConvertCheck = new javax.swing.JCheckBox();
        StatusPanel = new javax.swing.JPanel();
        ProgressBar = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        CreateButton = new javax.swing.JButton();
        FinishedButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(deconvolutionapp.DeConvolutionApp_RevD.class).getContext().getResourceMap(ProjectManager_JDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setModal(true);
        setName("Form"); // NOI18N

        ProjectNamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("ProjectNamePanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("ProjectNamePanel.border.titleFont"))); // NOI18N
        ProjectNamePanel.setName("ProjectNamePanel"); // NOI18N

        ProjectName.setName("ProjectName"); // NOI18N
        ProjectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ProjectNameKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout ProjectNamePanelLayout = new javax.swing.GroupLayout(ProjectNamePanel);
        ProjectNamePanel.setLayout(ProjectNamePanelLayout);
        ProjectNamePanelLayout.setHorizontalGroup(
            ProjectNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        ProjectNamePanelLayout.setVerticalGroup(
            ProjectNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProjectNamePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ProjectDirectoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("ProjectDirectoryPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("ProjectDirectoryPanel.border.titleFont"))); // NOI18N
        ProjectDirectoryPanel.setName("ProjectDirectoryPanel"); // NOI18N

        ProjectDirectory.setName("ProjectDirectory"); // NOI18N

        ProjectDirectoryButton.setFont(resourceMap.getFont("ProjectDirectoryButton.font")); // NOI18N
        ProjectDirectoryButton.setText(resourceMap.getString("ProjectDirectoryButton.text")); // NOI18N
        ProjectDirectoryButton.setName("ProjectDirectoryButton"); // NOI18N
        ProjectDirectoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectDirectoryButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ProjectDirectoryPanelLayout = new javax.swing.GroupLayout(ProjectDirectoryPanel);
        ProjectDirectoryPanel.setLayout(ProjectDirectoryPanelLayout);
        ProjectDirectoryPanelLayout.setHorizontalGroup(
            ProjectDirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectDirectoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProjectDirectoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ProjectDirectoryPanelLayout.setVerticalGroup(
            ProjectDirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProjectDirectoryPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ProjectDirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProjectDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProjectDirectoryButton))
                .addContainerGap())
        );

        RECTOFPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("RECTOFPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("RECTOFPanel.border.titleFont"))); // NOI18N
        RECTOFPanel.setName("RECTOFPanel"); // NOI18N

        OrginalFile.setName("OrginalFile"); // NOI18N

        RECTOFButton.setFont(resourceMap.getFont("RECTOFButton.font")); // NOI18N
        RECTOFButton.setText(resourceMap.getString("RECTOFButton.text")); // NOI18N
        RECTOFButton.setName("RECTOFButton"); // NOI18N
        RECTOFButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RECTOFButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout RECTOFPanelLayout = new javax.swing.GroupLayout(RECTOFPanel);
        RECTOFPanel.setLayout(RECTOFPanelLayout);
        RECTOFPanelLayout.setHorizontalGroup(
            RECTOFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RECTOFPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OrginalFile, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RECTOFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RECTOFPanelLayout.setVerticalGroup(
            RECTOFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RECTOFPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(RECTOFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrginalFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RECTOFButton))
                .addContainerGap())
        );

        ProjectNamePanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("ProjectNamePanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("ProjectNamePanel1.border.titleFont"))); // NOI18N
        ProjectNamePanel1.setName("ProjectNamePanel1"); // NOI18N

        ConvertCheck.setText(resourceMap.getString("ConvertCheck.text")); // NOI18N
        ConvertCheck.setToolTipText(resourceMap.getString("ConvertCheck.toolTipText")); // NOI18N
        ConvertCheck.setName("ConvertCheck"); // NOI18N

        javax.swing.GroupLayout ProjectNamePanel1Layout = new javax.swing.GroupLayout(ProjectNamePanel1);
        ProjectNamePanel1.setLayout(ProjectNamePanel1Layout);
        ProjectNamePanel1Layout.setHorizontalGroup(
            ProjectNamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectNamePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ConvertCheck)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        ProjectNamePanel1Layout.setVerticalGroup(
            ProjectNamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectNamePanel1Layout.createSequentialGroup()
                .addComponent(ConvertCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        StatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("StatusPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("StatusPanel.border.titleFont"))); // NOI18N
        StatusPanel.setName("StatusPanel"); // NOI18N

        ProgressBar.setName("ProgressBar"); // NOI18N

        javax.swing.GroupLayout StatusPanelLayout = new javax.swing.GroupLayout(StatusPanel);
        StatusPanel.setLayout(StatusPanelLayout);
        StatusPanelLayout.setHorizontalGroup(
            StatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addContainerGap())
        );
        StatusPanelLayout.setVerticalGroup(
            StatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setName("jPanel1"); // NOI18N

        CreateButton.setText(resourceMap.getString("CreateButton.text")); // NOI18N
        CreateButton.setName("CreateButton"); // NOI18N
        CreateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateButtonMouseClicked(evt);
            }
        });

        FinishedButton.setText(resourceMap.getString("FinishedButton.text")); // NOI18N
        FinishedButton.setName("FinishedButton"); // NOI18N
        FinishedButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FinishedButtonMouseClicked(evt);
            }
        });

        CancelButton.setText(resourceMap.getString("CancelButton.text")); // NOI18N
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FinishedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(FinishedButton)
                    .addComponent(CreateButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectDirectoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RECTOFPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectNamePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProjectNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProjectDirectoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RECTOFPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProjectNamePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProjectNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProjectNameKeyPressed
        // TODO add your handling code here:
        if (ProjectName.getText().isEmpty()){
            ProjectDirectoryButton.setEnabled(false);
            RECTOFButton.setEnabled(false);
            CreateButton.setEnabled(false);
            FinishedButton.setEnabled(false);
        }
        else{
            ProjectDirectoryButton.setEnabled(true);
            RECTOFButton.setEnabled(true);
            CreateButton.setEnabled(true);
        }
    }//GEN-LAST:event_ProjectNameKeyPressed

    private void ProjectDirectoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectDirectoryButtonMouseClicked
        // TODO add your handling code here:
        if (!ProjectName.getText().isEmpty()){
            try{
                JFileChooser fc = new JFileChooser(this.selectedFile);
                fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                int returnValue = fc.showOpenDialog(null);

                if (returnValue == JFileChooser.APPROVE_OPTION){
                        selectedFile = fc.getSelectedFile();
                        ProjectDirectory.setText(selectedFile.getPath());
                }
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_ProjectDirectoryButtonMouseClicked

    private void RECTOFButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RECTOFButtonMouseClicked
        // TODO add your handling code here:
        try{
                JFileChooser fc = new JFileChooser(this.selectedFile);
                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
                int returnValue = fc.showOpenDialog(null);

                if (returnValue == JFileChooser.APPROVE_OPTION){
                        conversionFile = fc.getSelectedFile();
                        OrginalFile.setText(conversionFile.getPath());
                }
        }
        catch(Exception ex){
                ex.printStackTrace();
        }
    }//GEN-LAST:event_RECTOFButtonMouseClicked

    private void CreateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateButtonMouseClicked
        // TODO add your handling code here:
        if (!ProjectName.getText().isEmpty()){
            if (!selectedFile.getPath().isEmpty() && !conversionFile.getPath().isEmpty()){
                    
                    //Disable the Create Button to avoid double clicks
                    CreateButton.setEnabled(false);
                
                    //Enable the Progress Bar
                    ProgressBar.setEnabled(true);
                    ProgressBar.setValue(5);
                    ProgressBar.validate();
                    
                    //Create the Directory
                    String concateTemp = selectedFile.getPath() + "\\" + ProjectName.getText();
                    File BuildFile = new File(concateTemp);
                    BuildFile.mkdir();
                    
                    try{
                        //Call Spectrum File Converter
                        SpectrumFileConverter spectrumFile = new SpectrumFileConverter(conversionFile.getPath());
                        ProgressBar.setValue(20);
                        if(spectrumFile.convertFile()){
                            
                            //Convert File
                            if (ConvertCheck.isSelected()){
                                if(spectrumFile.XMLConverter(BuildFile)){
                                    ProgressBar.setValue(80);
                                    System.out.println("XML File Created");
                                }
                            }
                            else{
                                ProgressBar.setValue(80);
                            }
                            
                            //Populate the local datastructure
                            dataStructure = new MS_DataStructure();
                            dataStructure.setFileName(BuildFile);
                            dataStructure.setIonVectorArray(spectrumFile.getIonVectorArray());
                            dataStructure.setMZVector(spectrumFile.getMZVector());
                            dataStructure.setAbundenceMatrix(spectrumFile.getAbundenceMatrix());
                            
                            //Save a Serialized Data Structure of "Orginal_Data"
                            FileOutputStream fileStream = new FileOutputStream(BuildFile.getAbsolutePath() + "\\" + "orginal_dataset.ser");
                            ObjectOutputStream os = new ObjectOutputStream(fileStream);
                            os.writeObject(this.dataStructure);
                            os.close();
                            
                            //Copy over the *.txt file
                            FileUtils.copyFileToDirectory(conversionFile, BuildFile);

                            //Delete the old class
                            spectrumFile = null;

                            //Call the garbage collector
                            System.gc();

                            ProgressBar.setValue(100);

                            //Enable Finish Button
                            FinishedButton.setEnabled(true);

                            ProjectManagerFinished = true;

                        }
                    }
                    catch(Exception ex){
                            ex.printStackTrace();
                    }
               
                    
            }
            else{
                    //custom title, error icon
                    JOptionPane.showMessageDialog(this,
                        "Please Select a Directory and File to Convert",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
    }
    else
    {
            //custom title, error icon
            JOptionPane.showMessageDialog(this,
                "Please Enter a Project Name",
                "Error",
                JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_CreateButtonMouseClicked

    private void FinishedButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FinishedButtonMouseClicked
        
        try{
            //Update the last read file
            //Save the Last Opened File back to Config
            this.ConfigFile.setLastDirectory(new File(ProjectDirectory.getText() + "\\" + ProjectName.getText()));
        }
        catch (Exception ex){
            ex.printStackTrace();
        }
        
        this.dataStructureReady = true;
        
        this.setVisible(false); 
    }//GEN-LAST:event_FinishedButtonMouseClicked

    private void CancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelButtonMouseClicked
        // TODO add your handling code here:
        ProgressBar.setValue(0);
        //Clear the dataStructure
        dataStructure = null;
        this.dataStructureReady = false;
                
        this.setVisible(false); 
    }//GEN-LAST:event_CancelButtonMouseClicked

    public MS_DataStructure getMSDataStructure() throws Exception{
        
        if (this.dataStructureReady){
            return this.dataStructure;
        }
        else{
            throw new Exception("DataStrucuture does not exist, returned from ProjectManager");
        }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectManager_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectManager_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectManager_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectManager_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ProjectManager_JDialog dialog = new ProjectManager_JDialog(new javax.swing.JFrame(),new ConfigReader(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JCheckBox ConvertCheck;
    private javax.swing.JButton CreateButton;
    private javax.swing.JButton FinishedButton;
    private javax.swing.JTextField OrginalFile;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JTextField ProjectDirectory;
    private javax.swing.JButton ProjectDirectoryButton;
    private javax.swing.JPanel ProjectDirectoryPanel;
    private javax.swing.JTextField ProjectName;
    private javax.swing.JPanel ProjectNamePanel;
    private javax.swing.JPanel ProjectNamePanel1;
    private javax.swing.JButton RECTOFButton;
    private javax.swing.JPanel RECTOFPanel;
    private javax.swing.JPanel StatusPanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
