/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConvolutionLoader_JDialog.java
 *
 * Created on Oct 21, 2011, 5:17:17 PM
 */
package deconvolutionapp;

//JDOM
import org.jdom.*;
import org.jdom.input.SAXBuilder;
import org.jdom.xpath.XPath;
import org.jdom.Document;

import java.io.*;

//Other
import java.util.Iterator;
import java.util.List;

/**
 * Reads the Convolution Kernel file and populates a selection window.
 * 
 * @author Gregory
 */
public class ConvolutionLoader_JDialog extends javax.swing.JDialog {
    
    private Boolean OKflag;
    private String SelectedKernel;
    
    private File ConvolutionKernelFile;
    private SAXBuilder builder;
    private Document doc;
    private String XMLexpression;
        
    /**
     * Constructor,
     * Loads the Convolution Kernel XML document and populates the window.
     * 
     * @param parent The parent window
     * @param modal Sets the flag for forced input
     */
    public ConvolutionLoader_JDialog(java.awt.Frame parent,ConfigReader ConfigFile, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //Reset ok flag
        OKflag = false;
        SelectedKernel = "";
        
        //Get the values from the Convolution.xml
        try{
           File ProjectDirectory = new File(ConfigFile.getConfigParameter("/root/LastOpenedDirectory"));
           ConvolutionKernelFile = new File(ProjectDirectory.getAbsolutePath() + "\\" + "ConvolutionKernals.xml");
           
           //Read in all of the Kernel File Names
           //Then populate the JListm
           builder = new SAXBuilder();
           doc = builder.build(ConvolutionKernelFile);
           
           //Read in all the Saved Kernel Elements
           XMLexpression = "/Kernel/SavedKernel";
           List KernelNames = XPath.selectNodes(doc, XMLexpression);
           
           //Create a iterator
           Iterator iter = KernelNames.iterator();
           Object[] Attributes = new Object[KernelNames.size()];
           int i = 0;
           while(iter.hasNext()) {
                Element result = (Element) iter.next();
               
                //Debugging
                //System.out.println(result.getAttributeValue("KernelName"));
                
                Attributes[i] = (Object) result.getAttributeValue("KernelName");
                i++;
           }
           
           //Then populate the JList
            selectionList.setListData(Attributes);
        }
        catch(IOException ex){
           ex.printStackTrace();
        }
        catch(Exception ex){
           ex.printStackTrace();
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectionPanel = new javax.swing.JPanel();
        SelectionBox = new javax.swing.JScrollPane();
        selectionList = new javax.swing.JList();
        ButtonPanel = new javax.swing.JPanel();
        SelectButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setModal(true);
        setName("Form"); // NOI18N

        selectionPanel.setName("selectionPanel"); // NOI18N

        SelectionBox.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        SelectionBox.setName("SelectionBox"); // NOI18N

        selectionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        selectionList.setName("selectionList"); // NOI18N
        SelectionBox.setViewportView(selectionList);

        ButtonPanel.setName("ButtonPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(deconvolutionapp.DeConvolutionApp_RevD.class).getContext().getResourceMap(ConvolutionLoader_JDialog.class);
        SelectButton.setText(resourceMap.getString("SelectButton.text")); // NOI18N
        SelectButton.setName("SelectButton"); // NOI18N
        SelectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectButtonMouseClicked(evt);
            }
        });

        CancelButton.setText(resourceMap.getString("CancelButton.text")); // NOI18N
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
        ButtonPanel.setLayout(ButtonPanelLayout);
        ButtonPanelLayout.setHorizontalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ButtonPanelLayout.setVerticalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(SelectButton))
                .addContainerGap())
        );

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout selectionPanelLayout = new javax.swing.GroupLayout(selectionPanel);
        selectionPanel.setLayout(selectionPanelLayout);
        selectionPanelLayout.setHorizontalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(SelectionBox, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addComponent(ButtonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        selectionPanelLayout.setVerticalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName(resourceMap.getString("Form.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Returns a string type of the name of the selected Convolution Kernel.
     * 
     * @return String name of the Convolution kernel
     * @throws Exception 
     */
    public String getSelectedKernel() throws Exception{
    
        if (this.OKflag){
            return this.SelectedKernel;
        }
        else{
            throw new Exception("No Kernel Selected, or Cancel Button Pressed");
        }
}
    
    /**
     * Handles the event when the Select Button is Pressed
     * 
     * @param evt 
     */
    private void SelectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectButtonMouseClicked
        
        this.SelectedKernel = selectionList.getSelectedValue().toString();
        
        this.OKflag = true;
        this.setVisible(false);
    }//GEN-LAST:event_SelectButtonMouseClicked

    /**
     * Handles the event when the Cancel Button is Pressed
     * 
     * @param evt 
     */
    private void CancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelButtonMouseClicked
        
        this.OKflag = false;
        this.setVisible(false);
    }//GEN-LAST:event_CancelButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConvolutionLoader_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConvolutionLoader_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConvolutionLoader_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConvolutionLoader_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ConvolutionLoader_JDialog dialog = new ConvolutionLoader_JDialog(new javax.swing.JFrame(),new ConfigReader(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton SelectButton;
    private javax.swing.JScrollPane SelectionBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList selectionList;
    private javax.swing.JPanel selectionPanel;
    // End of variables declaration//GEN-END:variables
}
